stages:
  - release
  - publish

variables:  
  ROOT: .

release:
  stage: release  
  image: 
    name: registry.gitlab.com/go-semantic-release/semantic-release:latest # Replace this with the current release
    entrypoint: [""]  
  variables:
    GIT_URL: ${CI_SERVER_HOST}/${CI_PROJECT_PATH}
    GIT_PATH: http://$GITLAB_TOKEN_NAME:${GITLAB_TOKEN}@${GIT_URL}.git     
  before_script:    
    - apk update && apk add jq && apk add git-lfs
    - jq --version
  script:    
    - semantic-release --dry -f --allow-initial-development-versions --changelog $ROOT/CHANGELOG.md --prepend-changelog    
    - NEW_VERSION=$(cat .version-unreleased)    
    - jq --arg version ${NEW_VERSION} '.version=$version' $ROOT/package.json > $ROOT/package.json.new
    - mv $ROOT/package.json.new $ROOT/package.json
    - git remote set-url origin ${GIT_PATH}
    - git config --global user.email "gitlab@youcanstar.com"
    - git config --global user.name "gitlab cicd"
    - git add .
    - git commit -m "Update file CHANGELOG.md"
    - git push -o ci.skip origin HEAD:$CI_COMMIT_BRANCH
    - semantic-release --allow-initial-development-versions release
  rules:
    #- if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "web" && $PACKAGE
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "web"
  tags:
    - ycs
    - docker


publish_job:
  stage: publish
  image: node:17.6-alpine3.14  
  script:    
    - npm set registry http://${REGISTRY_URL}
    - npm config set -- '//${REGISTRY_URL}/:_authToken' "${REGISTRY_AUTH_TOKEN}"            
    - cd $ROOT
    - npm publish
  rules:
    - if: $CI_COMMIT_TAG      
  tags:
    - ycs
    - docker

